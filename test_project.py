from project import renderBoard, Snake

def test_renderBoard():
    assert renderBoard([3,5],[[4,6],[8,13]],[2,2],score=5) == [
        ["  ","__","__","__","__","__","__","__","__","__","__","__","__","__","__","__","__","__","__","__","__","  "],
        [" |","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","| "],
        [" |","  ","<>","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","| "],
        [" |","  ","  ","  ","  ","::","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","| "],
        [" |","  ","  ","  ","  ","  ","[]","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","| "],
        [" |","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","| "],
        [" |","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","| "],
        [" |","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","| "],
        [" |","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","[]","  ","  ","  ","  ","  ","  ","  ","| "],
        [" |","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","  ","| "],
        ["  ","‾‾","‾‾","‾‾","‾‾","‾‾","‾‾","‾‾","‾‾","‾‾","‾‾","‾‾","‾‾","‾‾","‾‾","‾‾","‾‾","‾‾","‾‾","‾‾","‾‾","  "],
        ]

def test_direction():
    snake = Snake(level = 1)
    snake.direction("qwe")
    assert snake._direction == "qwe"

def test_move():
    snake = Snake(level = 1)
    initial_length = len(snake._body)
    snake._length += 1
    snake.move()
    final_length = len(snake._body)
    assert initial_length == final_length - 1

def test_game_over():
    snake = Snake(level = 1)
    snake.game_over(10)
    assert snake.running == False